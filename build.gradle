buildscript {
    ext {
        kotlinVersion = "1.2.51"
        springBootVersion = "2.0.3.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = "xyz.stankovic.nikola"
version = "1.0.0-SNAPSHOT"

bootJar {
    baseName = 'gksbh-template'
    version =  '1.0.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "spring-boot-starter-json"
    }
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean